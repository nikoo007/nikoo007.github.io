(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{1089:function(s,t,a){"use strict";a.r(t);var n=a(54),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"nodejs-day04"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-day04"}},[s._v("#")]),s._v(" NodeJs - day04")]),s._v(" "),n("h1",{attrs:{id:"目标"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#目标"}},[s._v("#")]),s._v(" 目标")]),s._v(" "),n("ul",[n("li",[s._v("能够知道如何使用 Express 中的路由")]),s._v(" "),n("li",[s._v("能够说出 Express 的中间件分为哪五大类")]),s._v(" "),n("li",[s._v("能够知道在 Express 中如何定义全局和局部的中间件")]),s._v(" "),n("li",[s._v("能够知道如何在 Express 中使用中间件")]),s._v(" "),n("li",[s._v("能够知道如何在 Express 中编写接口")])]),s._v(" "),n("h1",{attrs:{id:"路由的概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#路由的概念"}},[s._v("#")]),s._v(" 路由的概念")]),s._v(" "),n("h2",{attrs:{id:"_1-什么是路由"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是路由"}},[s._v("#")]),s._v(" 1. 什么是路由")]),s._v(" "),n("p",[s._v("广义上来讲，路由就是映射关系。")]),s._v(" "),n("h2",{attrs:{id:"_2-现实生活中的路由"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-现实生活中的路由"}},[s._v("#")]),s._v(" 2. 现实生活中的路由")]),s._v(" "),n("p",[n("img",{attrs:{src:a(674),alt:"image-20201122215234178"}})]),s._v(" "),n("h2",{attrs:{id:"_3-express-中的路由"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-express-中的路由"}},[s._v("#")]),s._v(" 3. Express 中的路由")]),s._v(" "),n("p",[s._v("在 Express 中，路由指的是客户端的请求与服务器处理函数之间的映射关系。\nExpress 中的路由分 3 部分组成，分别是请求的类型、请求的 URL 地址、处理函数，格式如下：")]),s._v(" "),n("p",[n("img",{attrs:{src:a(675),alt:"image-20201122215303947"}})]),s._v(" "),n("h2",{attrs:{id:"_4-express-中的路由的例子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-express-中的路由的例子"}},[s._v("#")]),s._v(" 4. Express 中的路由的例子")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 挂载路由")]),s._v("\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("post")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Post Request."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h2",{attrs:{id:"_5-路由的匹配过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-路由的匹配过程"}},[s._v("#")]),s._v(" 5. 路由的匹配过程")]),s._v(" "),n("p",[s._v("每当一个请求到达服务器之后，需要先经过路由的匹配，只有匹配成功之后，才会调用对应的处理函数。\n在匹配时，会按照路由的顺序进行匹配，如果请求类型和请求的 URL 同时匹配成功，则 Express 会将这次请求，转 交给对应的 function 函数进行处理。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(676),alt:"image-20201122215412715"}})]),s._v(" "),n("h1",{attrs:{id:"路由的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#路由的使用"}},[s._v("#")]),s._v(" 路由的使用")]),s._v(" "),n("h2",{attrs:{id:"_1-最简单的用法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-最简单的用法"}},[s._v("#")]),s._v(" 1. 最简单的用法")]),s._v(" "),n("p",[s._v("在 Express 中使用路由最简单的方式，就是把路由挂载到 app 上，示例代码如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" express "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"express"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" app "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("express")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 挂载路由")]),s._v("\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("post")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Post Request."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("listen")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://127.0.0.1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h2",{attrs:{id:"_2-模块化路由"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-模块化路由"}},[s._v("#")]),s._v(" 2. 模块化路由")]),s._v(" "),n("p",[s._v("为了方便对路由进行模块化的管理，Express 不建议将路由直接挂载到 app 上，而是推荐将路由抽离为单独的模块。\n将路由抽离为单独模块的步骤如下：\n"),n("strong",[s._v("① 创建路由模块对应的 .js 文件")]),s._v(" "),n("strong",[s._v("② 调用 express.Router() 函数创建路由对象")]),s._v(" "),n("strong",[s._v("③ 向路由对象上挂载具体的路由")]),s._v(" "),n("strong",[s._v("④ 使用 module.exports 向外共享路由对象")]),s._v(" "),n("strong",[s._v("⑤ 使用 app.use() 函数注册路由模块")])]),s._v(" "),n("h2",{attrs:{id:"_3-创建路由模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-创建路由模块"}},[s._v("#")]),s._v(" 3. 创建路由模块")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1. 导入 express")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" express "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"express"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2. 创建路由对象")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" router "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" express"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Router")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3. 挂载具体的路由")]),s._v("\nrouter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/user/list"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Get user list."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nrouter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("post")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/user/add"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add new user."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4. 向外导出路由对象")]),s._v("\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" router"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h2",{attrs:{id:"_4-注册路由模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-注册路由模块"}},[s._v("#")]),s._v(" 4. 注册路由模块")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1. 导入路由模块")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" router "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./03.router"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2. 注册路由模块")]),s._v("\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("use")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("router"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h2",{attrs:{id:"_5-为路由模块添加前缀"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-为路由模块添加前缀"}},[s._v("#")]),s._v(" 5. 为路由模块添加前缀")]),s._v(" "),n("p",[s._v("类似于托管静态资源时，为静态资源统一挂载访问前缀一样，路由模块添加前缀的方式也非常简单：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1. 导入路由模块")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" router "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./03.router"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2. 注册路由模块")]),s._v("\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("use")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/api"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" router"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h1",{attrs:{id:"中间件的概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#中间件的概念"}},[s._v("#")]),s._v(" 中间件的概念")]),s._v(" "),n("h2",{attrs:{id:"_1-什么是中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是中间件"}},[s._v("#")]),s._v(" 1. 什么是中间件")]),s._v(" "),n("p",[s._v("中间件（Middleware ），特指业务流程的中间处理环节。")]),s._v(" "),n("h2",{attrs:{id:"_2-现实生活中的例子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-现实生活中的例子"}},[s._v("#")]),s._v(" 2. 现实生活中的例子")]),s._v(" "),n("p",[s._v("在处理污水的时候，一般都要经过三个处理环节，从而保证处理过后的废水，达到排放标准。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(677),alt:"image-20201122215834358"}})]),s._v(" "),n("h2",{attrs:{id:"_3-express-中间件的调用流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-express-中间件的调用流程"}},[s._v("#")]),s._v(" 3.Express 中间件的调用流程")]),s._v(" "),n("p",[s._v("当一个请求到达 Express 的服务器之后，可以连续调用多个中间件，从而对这次请求进行预处理。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(678),alt:"image-20201122215917024"}})]),s._v(" "),n("h2",{attrs:{id:"_4-express-中间件的格式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-express-中间件的格式"}},[s._v("#")]),s._v(" 4. Express 中间件的格式")]),s._v(" "),n("p",[n("img",{attrs:{src:a(679),alt:"image-20201122215936977"}})]),s._v(" "),n("h1",{attrs:{id:"express-中间件的初体验"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#express-中间件的初体验"}},[s._v("#")]),s._v(" Express 中间件的初体验")]),s._v(" "),n("h2",{attrs:{id:"_1-局部生效的中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-局部生效的中间件"}},[s._v("#")]),s._v(" 1. 局部生效的中间件")]),s._v(" "),n("p",[n("img",{attrs:{src:a(680),alt:"image-20201122220039410"}})]),s._v(" "),n("h2",{attrs:{id:"_2-全局生效的中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-全局生效的中间件"}},[s._v("#")]),s._v(" 2. 全局生效的中间件")]),s._v(" "),n("p",[s._v("通过调用 app.use(中间件函数)，即可注册一个全局生效的中间件，示例代码如下：")]),s._v(" "),n("p",[n("img",{attrs:{src:a(681),alt:"image-20201122220104925"}})]),s._v(" "),n("h2",{attrs:{id:"_3-了解中间件的使用注意事项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-了解中间件的使用注意事项"}},[s._v("#")]),s._v(" 3.了解中间件的使用注意事项")]),s._v(" "),n("p",[s._v("① 一定要在路由之前注册中间件\n"),n("strong",[s._v("② 客户端发送过来的请求，可以连续调用多个中间件进行处理")]),s._v(" "),n("strong",[s._v("③ 执行完中间件的业务代码之后，不要忘记调用 next() 函数")]),s._v(" "),n("strong",[s._v("④ 为了防止代码逻辑混乱，调用 next() 函数后不要再写额外的代码")]),s._v(" "),n("strong",[s._v("⑤ 连续调用多个中间件时，多个中间件之间，共享 req 和 res 对象")])]),s._v(" "),n("h1",{attrs:{id:"中间件的分类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#中间件的分类"}},[s._v("#")]),s._v(" 中间件的分类")]),s._v(" "),n("p",[s._v("为了方便大家理解和记忆中间件的使用，Express 官方把常见的中间件，分成了 5 大类，分别是：\n"),n("strong",[s._v("① 应用级别的中间件")]),s._v(" "),n("strong",[s._v("② 路由级别的中间件")]),s._v(" "),n("strong",[s._v("③ 错误级别的中间件")]),s._v(" "),n("strong",[s._v("④ Express 内置的中间件")]),s._v(" "),n("strong",[s._v("⑤ 第三方的中间件")])]),s._v(" "),n("h2",{attrs:{id:"_1-应用级别的中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-应用级别的中间件"}},[s._v("#")]),s._v(" 1.应用级别的中间件")]),s._v(" "),n("p",[s._v("通过 app.use() 或 app.METHOD() 函数，绑定到 app 实例上的中间件，叫做应用级别的中间件，代码示例如下")]),s._v(" "),n("p",[n("img",{attrs:{src:a(682),alt:"image-20201122220232479"}})]),s._v(" "),n("h2",{attrs:{id:"_2-路由级别的中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-路由级别的中间件"}},[s._v("#")]),s._v(" 2. 路由级别的中间件")]),s._v(" "),n("p",[s._v("绑定到 express.Router() 实例上的中间件，叫做路由级别的中间件。它的用法和应用级别中间件没有任何区别。只不 过，应用级别中间件是绑定到 app 实例上，路由级别中间件绑定到 router 实例上，代码示例如下：")]),s._v(" "),n("p",[n("img",{attrs:{src:a(683),alt:"image-20201122220254993"}})]),s._v(" "),n("h2",{attrs:{id:"_3-错误级别的中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-错误级别的中间件"}},[s._v("#")]),s._v(" 3. 错误级别的中间件")]),s._v(" "),n("p",[s._v("错误级别的中间件 function 处理函数，必须有 4 个形参，形参顺序从前到后，分别是(err, req, res, next)。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(684),alt:"image-20201122220320349"}})]),s._v(" "),n("h2",{attrs:{id:"_4-express-内置的中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-express-内置的中间件"}},[s._v("#")]),s._v(" 4. Express 内置的中间件")]),s._v(" "),n("p",[s._v("自 Express 4.16.0 版本开始，Express 内置了 3 个常用的中间件，极大的提高了 Express 项目的开发效率和体验：\n"),n("strong",[s._v("① express.static 快速托管静态资源的内置中间件，例如：HTML 文件、图片、CSS 样式等（无兼容性）")]),s._v(" "),n("strong",[s._v("② express.json 解析 JSON 格式的请求体数据（有兼容性，仅在 4.16.0+ 版本中可用）")]),s._v(" "),n("strong",[s._v("③ express.urlencoded 解析 URL-encoded 格式的请求体数据（有兼容性，仅在 4.16.0+ 版本中可用）")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(685),alt:"image-20201122220352090"}})]),s._v(" "),n("h2",{attrs:{id:"_5-第三方的中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-第三方的中间件"}},[s._v("#")]),s._v(" 5. 第三方的中间件")]),s._v(" "),n("p",[s._v("非 Express 官方内置的中间件，而是由第三方开发出来的 Express 中间件，叫做第三方中间件。在项目中，大家可以 按需下载并配置第三方中间件，从而提高项目的开发效率。\n例如：除了使用 express.urlencoded 这个内置中间件来解析请求体数据，还可以使用 body-parser 这个第三方中间 件，来解析请求体数据。使用步骤如下：\n"),n("strong",[s._v("① 运行 npm install body-parser 安装中间件")]),s._v(" "),n("strong",[s._v("② 使用 require 导入中间件")]),s._v(" "),n("strong",[s._v("③ 调用 app.use() 注册并使用中间件")]),s._v("\n注意：Express 内置的 express.urlencoded 中间件，就是基于 body-parser 这个第三方中间件进一步封装出来的。")]),s._v(" "),n("h1",{attrs:{id:"自定义中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自定义中间件"}},[s._v("#")]),s._v(" 自定义中间件")]),s._v(" "),n("h2",{attrs:{id:"_1-需求描述与实现步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-需求描述与实现步骤"}},[s._v("#")]),s._v(" 1. 需求描述与实现步骤")]),s._v(" "),n("p",[s._v("自己手动模拟一个类似于 express.urlencoded 这样的中间件，来解析 POST 提交到服务器的表单数据。\n实现步骤：\n"),n("strong",[s._v("① 定义中间件")]),s._v(" "),n("strong",[s._v("② 监听 req 的 data 事件")]),s._v(" "),n("strong",[s._v("③ 监听 req 的 end 事件")]),s._v(" "),n("strong",[s._v("④ 使用 querystring 模块解析请求体数据")]),s._v(" "),n("strong",[s._v("⑤ 将解析出来的数据对象挂载为 req.body")]),s._v(" "),n("strong",[s._v("⑥ 将自定义中间件封装为模块")])]),s._v(" "),n("h2",{attrs:{id:"_2-定义中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-定义中间件"}},[s._v("#")]),s._v(" 2. 定义中间件")]),s._v(" "),n("p",[s._v("使用 app.use() 来定义全局生效的中间件，代码如下：")]),s._v(" "),n("p",[n("img",{attrs:{src:a(686),alt:"image-20201122220501448"}})]),s._v(" "),n("h2",{attrs:{id:"_3-监听-req-的-data-事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-监听-req-的-data-事件"}},[s._v("#")]),s._v(" 3. 监听 req 的 data 事件")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1. 定义一个 str 字符串，专门用来存储客户端发送过来的请求体数据")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2. 监听 req 的 data 事件")]),s._v("\nreq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"data"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("chunk")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  str "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" chunk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h2",{attrs:{id:"_4-监听-req-的-end-事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-监听-req-的-end-事件"}},[s._v("#")]),s._v(" 4. 监听 req 的 end 事件")]),s._v(" "),n("p",[s._v("当客户端最终把所有数据发送到服务器之后，会自动触发 req 的 end 事件。\n因此，我们可以在 req 的 end 事件中，拿到并处理完整的请求体数据。示例代码如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"end"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在 str 中存放的是完整的请求体数据")]),s._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h2",{attrs:{id:"_5-使用-querystring-模块解析请求体数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-使用-querystring-模块解析请求体数据"}},[s._v("#")]),s._v(" 5. 使用 querystring 模块解析请求体数据")]),s._v(" "),n("p",[s._v("Node.js 内置了一个 querystring 模块，专门用来处理查询字符串。通过这个模块提供的 parse() 函数，可以轻松把 查询字符串，解析成对象的格式。示例代码如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 导入 Node.js 内置的 querystring 模块")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" qs "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"querystring"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" body "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" qs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("parse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h2",{attrs:{id:"_6-将解析出来的数据对象挂载为-req-body"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-将解析出来的数据对象挂载为-req-body"}},[s._v("#")]),s._v(" 6. 将解析出来的数据对象挂载为 req.body")]),s._v(" "),n("p",[s._v("为了方便在后续的业务处理流程中，能够直接访问当前中间件解析出来的请求体对象，我们将解析出来的数据，挂载 为 req 的自定义属性，命名为 req.body。示例代码如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3. 监听 req 的 end 事件")]),s._v("\nreq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"end"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在 str 中存放的是完整的请求体数据")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// console.log(str)")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// TODO: 把字符串格式的请求体数据，解析成对象格式")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" body "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" qs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("parse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("body "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h2",{attrs:{id:"_7-将自定义中间件封装为模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-将自定义中间件封装为模块"}},[s._v("#")]),s._v(" 7. 将自定义中间件封装为模块")]),s._v(" "),n("p",[s._v("为了优化代码的结构，我们可以把自定义的中间件函数，封装为独立的模块，示例代码如下：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 导入 Node.js 内置的 querystring 模块")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" qs "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"querystring"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("bodyParser")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义中间件具体的业务逻辑")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1. 定义一个 str 字符串，专门用来存储客户端发送过来的请求体数据")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" str "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2. 监听 req 的 data 事件")]),s._v("\n  req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"data"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("chunk")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    str "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" chunk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3. 监听 req 的 end 事件")]),s._v("\n  req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"end"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在 str 中存放的是完整的请求体数据")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// console.log(str)")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// TODO: 把字符串格式的请求体数据，解析成对象格式")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" body "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" qs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("parse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("body "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" bodyParser"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])]),n("h1",{attrs:{id:"使用-express-写接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-express-写接口"}},[s._v("#")]),s._v(" 使用 Express 写接口")]),s._v(" "),n("h2",{attrs:{id:"_1-创建基本的服务器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建基本的服务器"}},[s._v("#")]),s._v(" 1.创建基本的服务器")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 导入 express")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" express "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"express"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建服务器实例")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" app "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("express")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 启动服务器")]),s._v("\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("listen")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"express server running at http://127.0.0.1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h2",{attrs:{id:"_2-创建-api-路由模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建-api-路由模块"}},[s._v("#")]),s._v(" 2.创建 API 路由模块")]),s._v(" "),n("p",[n("img",{attrs:{src:a(687),alt:"image-20201122221027559"}})]),s._v(" "),n("h2",{attrs:{id:"_3-编写-get-接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-编写-get-接口"}},[s._v("#")]),s._v(" 3 编写 GET 接口")]),s._v(" "),n("p",[n("img",{attrs:{src:a(688),alt:"image-20201122221050234"}})]),s._v(" "),n("h2",{attrs:{id:"_4-编写-post-接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-编写-post-接口"}},[s._v("#")]),s._v(" 4.编写 POST 接口")]),s._v(" "),n("p",[n("img",{attrs:{src:a(689),alt:"image-20201122221108971"}})]),s._v(" "),n("p",[s._v("注意：如果要获取 URL-encoded 格式的请求体数据，必须配置中间件 app.use(express.urlencoded({ extended: false }))")]),s._v(" "),n("h1",{attrs:{id:"cors-跨域资源共享"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cors-跨域资源共享"}},[s._v("#")]),s._v(" CORS 跨域资源共享")]),s._v(" "),n("h2",{attrs:{id:"_1-接口的跨域问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-接口的跨域问题"}},[s._v("#")]),s._v(" 1. 接口的跨域问题")]),s._v(" "),n("p",[s._v("刚才编写的 GET 和 POST 接口，存在一个很严重的问题：不支持跨域请求。\n解决接口跨域问题的方案主要有两种：\n"),n("strong",[s._v("① CORS（主流的解决方案，推荐使用）")]),s._v(" "),n("strong",[s._v("② JSONP（有缺陷的解决方案：只支持 GET 请求）")])]),s._v(" "),n("h2",{attrs:{id:"_2-使用-cors-中间件解决跨域问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用-cors-中间件解决跨域问题"}},[s._v("#")]),s._v(" 2. 使用 cors 中间件解决跨域问题")]),s._v(" "),n("p",[s._v("cors 是 Express 的一个第三方中间件。通过安装和配置 cors 中间件，可以很方便地解决跨域问题。\n使用步骤分为如下 3 步：\n"),n("strong",[s._v("① 运行 npm install cors 安装中间件")]),s._v(" "),n("strong",[s._v("② 使用 const cors = require('cors') 导入中间件")]),s._v(" "),n("strong",[s._v("③ 在路由之前调用 app.use(cors()) 配置中间件")])]),s._v(" "),n("h2",{attrs:{id:"_3-什么是-cors"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-什么是-cors"}},[s._v("#")]),s._v(" 3. 什么是 CORS")]),s._v(" "),n("p",[s._v("CORS （Cross-Origin Resource Sharing，跨域资源共享）由一系列传输的 HTTP 头组成，这些 HTTP 头决定浏 览器是否阻止前端 JavaScript 代码获取跨域请求的响应。")]),s._v(" "),n("p",[s._v("同源安全策略默认阻止“跨域”获取资源。但是 CORS 给了 web 服务器这样的权限，即服务器可以选择，允许跨 域请求访问到它们的资源。")]),s._v(" "),n("h2",{attrs:{id:"_4-cors-的注意事项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-cors-的注意事项"}},[s._v("#")]),s._v(" 4. CORS 的注意事项")]),s._v(" "),n("p",[s._v("① CORS 主要在服务器端进行配置。客户端浏览器无须做任何额外的配置，即可请求开启了 CORS 的接口。\n② CORS 在浏览器中有兼容性。只有支持 XMLHttpRequest Level2 的浏览器，才能正常访问开启了 CORS 的服 务端接口（例如：IE10+、Chrome4+、FireFox3.5+）。")]),s._v(" "),n("h2",{attrs:{id:"_5-cors-响应头部-access-control-allow-origin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-cors-响应头部-access-control-allow-origin"}},[s._v("#")]),s._v(" 5. CORS 响应头部 - Access-Control-Allow-Origin")]),s._v(" "),n("p",[s._v("响应头部中可以携带一个 Access-Control-Allow-Origin 字段，其语法如下:")]),s._v(" "),n("p",[n("img",{attrs:{src:a(690),alt:"image-20201122221415494"}})]),s._v(" "),n("p",[s._v("其中，origin 参数的值指定了允许访问该资源的外域 URL。\n例如，下面的字段值将只允许来自 http://itcast.cn 的请求：")]),s._v(" "),n("p",[n("img",{attrs:{src:a(691),alt:"image-20201122221430610"}})]),s._v(" "),n("h2",{attrs:{id:"_5-cors-响应头部-access-control-allow-origin-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-cors-响应头部-access-control-allow-origin-2"}},[s._v("#")]),s._v(" 5. CORS 响应头部 - Access-Control-Allow-Origin")]),s._v(" "),n("p",[s._v("如果指定了 Access-Control-Allow-Origin 字段的值为通配符*，表示允许来自任何域的请求，示例代码如下：")]),s._v(" "),n("p",[n("img",{attrs:{src:a(692),alt:"image-20201122221502025"}})]),s._v(" "),n("h2",{attrs:{id:"_6-cors-响应头部-access-control-allow-headers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-cors-响应头部-access-control-allow-headers"}},[s._v("#")]),s._v(" 6. CORS 响应头部 - Access-Control-Allow-Headers")]),s._v(" "),n("p",[s._v("默认情况下，CORS 仅支持客户端向服务器发送如下的 9 个请求头：\nAccept、Accept-Language、Content-Language、DPR、Downlink、Save-Data、Viewport-Width、Width 、 Content-Type （值仅限于 text/plain、multipart/form-data、application/x-www-form-urlencoded 三者之一）\n如果客户端向服务器发送了额外的请求头信息，则需要在服务器端，通过 Access-Control-Allow-Headers 对额外 的请求头进行声明，否则这次请求会失败！")]),s._v(" "),n("p",[n("img",{attrs:{src:a(693),alt:"image-20201122221526843"}})]),s._v(" "),n("h2",{attrs:{id:"_7-cors-响应头部-access-control-allow-methods"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-cors-响应头部-access-control-allow-methods"}},[s._v("#")]),s._v(" 7. CORS 响应头部 - Access-Control-Allow-Methods")]),s._v(" "),n("p",[s._v("默认情况下，CORS 仅支持客户端发起 GET、POST、HEAD 请求。\n如果客户端希望通过 PUT、DELETE 等方式请求服务器的资源，则需要在服务器端，通过 Access-Control-Alow-Methods 来指明实际请求所允许使用的 HTTP 方法。\n示例代码如下")]),s._v(" "),n("p",[n("img",{attrs:{src:a(694),alt:"image-20201122221551965"}})]),s._v(" "),n("h2",{attrs:{id:"_8-简单请求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-简单请求"}},[s._v("#")]),s._v(" 8. 简单请求")]),s._v(" "),n("p",[s._v("同时满足以下两大条件的请求，就属于简单请求：\n① 请求方式：GET、POST、HEAD 三者之一\n② HTTP 头部信息不超过以下几种字段：无自定义头部字段、Accept、Accept-Language、Content-Language、DPR、 Downlink、Save-Data、Viewport-Width、Width 、Content-Type（只有三个值 application/x-www-formurlencoded、multipart/form-data、text/plain）")]),s._v(" "),n("p",[n("strong",[s._v("简单请求的特点")]),s._v("：客户端与服务器之间只会发生一次请求。")]),s._v(" "),n("h2",{attrs:{id:"_9-预检请求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-预检请求"}},[s._v("#")]),s._v(" 9. 预检请求")]),s._v(" "),n("p",[s._v("只要符合以下任何一个条件的请求，都需要进行预检请求：\n"),n("strong",[s._v("① 请求方式为 GET、POST、HEAD 之外的请求 Method 类型")]),s._v(" "),n("strong",[s._v("② 请求头中包含自定义头部字段")]),s._v(" "),n("strong",[s._v("③ 向服务器发送了 application/json 格式的数据")]),s._v("\n在浏览器与服务器正式通信之前，浏览器会先发送 OPTION 请求进行预检，以获知服务器是否允许该实际请求，所以这一 次的 OPTION 请求称为“预检请求”。服务器成功响应预检请求后，才会发送真正的请求，并且携带真实数据。\n预检请求的特点：OPTION 预检请求成功之后，才会发起真正的请求。")]),s._v(" "),n("h1",{attrs:{id:"jsonp-接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jsonp-接口"}},[s._v("#")]),s._v(" JSONP 接口")]),s._v(" "),n("h2",{attrs:{id:"_1-回顾-jsonp-的概念与特点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-回顾-jsonp-的概念与特点"}},[s._v("#")]),s._v(" 1. 回顾 JSONP 的概念与特点")]),s._v(" "),n("p",[s._v("概念：浏览器端通过 "),n("code",[s._v("<script>")]),s._v(" 标签的 src 属性，请求服务器上的数据，同时，服务器返回一个函数的调用。这种请求数据 的方式叫做 JSONP。\n特点：JSONP 仅支持 GET 请求，不支持 POST、PUT、DELETE 等请求。")]),s._v(" "),n("h2",{attrs:{id:"_2-创建-jsonp-接口的注意事项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建-jsonp-接口的注意事项"}},[s._v("#")]),s._v(" 2. 创建 JSONP 接口的注意事项")]),s._v(" "),n("p",[s._v("如果项目中已经配置了 CORS 跨域资源共享，为了防止冲突，必须在配置 CORS 中间件之前声明 JSONP 的接口。否则 JSONP 接口会被处理成开启了 CORS 的接口。示例代码如下：")]),s._v(" "),n("p",[n("img",{attrs:{src:a(695),alt:"image-20201122221719217"}})]),s._v(" "),n("h2",{attrs:{id:"_3-在网页中使用-jquery-发起-jsonp-请求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-在网页中使用-jquery-发起-jsonp-请求"}},[s._v("#")]),s._v(" 3. 在网页中使用 jQuery 发起 JSONP 请求")]),s._v(" "),n("p",[n("img",{attrs:{src:a(696),alt:"image-20201122221735712"}})]),s._v(" "),n("h2",{attrs:{id:"_4-实现-jsonp-接口的步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-实现-jsonp-接口的步骤"}},[s._v("#")]),s._v(" 4. 实现 JSONP 接口的步骤")]),s._v(" "),n("p",[n("strong",[s._v("① 获取客户端发送过来的回调函数的名字")]),s._v(" "),n("strong",[s._v("② 得到要通过 JSONP 形式发送给客户端的数据")]),s._v(" "),n("strong",[s._v("③ 根据前两步得到的数据，拼接出一个函数调用的字符串")]),s._v(" "),n("strong",[s._v("④ 把上一步拼接得到的字符串，响应给客户端的"),n("code",[s._v("<script>")]),s._v(" 标签进行解析执行")])]),s._v(" "),n("h2",{attrs:{id:"_5-实现-jsonp-接口的具体代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-实现-jsonp-接口的具体代码"}},[s._v("#")]),s._v(" 5. 实现 JSONP 接口的具体代码")]),s._v(" "),n("p",[n("img",{attrs:{src:a(697),alt:"image-20201122221809815"}})])])}),[],!1,null,null,null);t.default=r.exports},674:function(s,t,a){s.exports=a.p+"assets/img/image-20201122215234178.e5dff710.png"},675:function(s,t,a){s.exports=a.p+"assets/img/image-20201122215303947.ebd0ebda.png"},676:function(s,t,a){s.exports=a.p+"assets/img/image-20201122215412715.bde0cba4.png"},677:function(s,t,a){s.exports=a.p+"assets/img/image-20201122215834358.6bc35d3c.png"},678:function(s,t,a){s.exports=a.p+"assets/img/image-20201122215917024.c6b32aad.png"},679:function(s,t,a){s.exports=a.p+"assets/img/image-20201122215936977.f46aa709.png"},680:function(s,t,a){s.exports=a.p+"assets/img/image-20201122220039410.3d475ef1.png"},681:function(s,t,a){s.exports=a.p+"assets/img/image-20201122220104925.0eff7bcc.png"},682:function(s,t,a){s.exports=a.p+"assets/img/image-20201122220232479.48833e7a.png"},683:function(s,t,a){s.exports=a.p+"assets/img/image-20201122220254993.86d1f30b.png"},684:function(s,t,a){s.exports=a.p+"assets/img/image-20201122220320349.8f5cbb5d.png"},685:function(s,t,a){s.exports=a.p+"assets/img/image-20201122220352090.50678596.png"},686:function(s,t,a){s.exports=a.p+"assets/img/image-20201122220501448.85ae5eaf.png"},687:function(s,t,a){s.exports=a.p+"assets/img/image-20201122221027559.714aa22d.png"},688:function(s,t,a){s.exports=a.p+"assets/img/image-20201122221050234.60c5af8b.png"},689:function(s,t,a){s.exports=a.p+"assets/img/image-20201122221108971.63033035.png"},690:function(s,t,a){s.exports=a.p+"assets/img/image-20201122221415494.bdd7dc53.png"},691:function(s,t,a){s.exports=a.p+"assets/img/image-20201122221430610.be8801d5.png"},692:function(s,t,a){s.exports=a.p+"assets/img/image-20201122221502025.92b1e1fd.png"},693:function(s,t,a){s.exports=a.p+"assets/img/image-20201122221526843.0b1e8e85.png"},694:function(s,t,a){s.exports=a.p+"assets/img/image-20201122221551965.10a10c36.png"},695:function(s,t,a){s.exports=a.p+"assets/img/image-20201122221719217.7257afea.png"},696:function(s,t,a){s.exports=a.p+"assets/img/image-20201122221735712.640472aa.png"},697:function(s,t,a){s.exports=a.p+"assets/img/image-20201122221809815.4f763626.png"}}]);